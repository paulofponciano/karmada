# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: ubuntu-admin-karmada-sa
#   namespace: default
#   annotations:
#       eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNTID:role/role-name
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ubuntu-admin-karmada
  namespace: karmada-system
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ubuntu-admin-karmada
  namespace: karmada-system
subjects:
- namespace: karmada-system
  kind: ServiceAccount
  name: ubuntu-admin-karmada
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ubuntu-admin-karmada
---
apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-admin-karmada
  namespace: karmada-system
spec:
  serviceAccountName: ubuntu-admin-karmada
  containers:
  - image: ubuntu
    command:
      - "/bin/bash"
      - "-c"
      - >
        apt-get update &&
        apt-get install -y vim curl git unzip iputils-ping telnet &&
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" &&
        chmod +x ./kubectl &&
        mv ./kubectl /usr/local/bin/kubectl &&
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" &&
        unzip awscliv2.zip &&
        ./aws/install &&
        sleep 604800
    imagePullPolicy: IfNotPresent
    name: ubuntu
    volumeMounts:
        - name: karmada-kubeconfig
          readOnly: true
          mountPath: "/etc/karmada-kubeconfig"
  volumes:
    - name: karmada-kubeconfig
      secret:
        secretName: karmada-kubeconfig
  restartPolicy: Always